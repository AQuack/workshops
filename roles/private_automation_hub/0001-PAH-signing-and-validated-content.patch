From 9b0582ddf49ffe9c5e1ea6717eecac6de1a471dd Mon Sep 17 00:00:00 2001
From: anshulbehl <anshulbehl.19@gmail.com>
Date: Mon, 9 Jan 2023 13:04:38 -0500
Subject: [PATCH] PAH signing and validated content

---
 defaults/main.yml                  |  1 +
 files/signing_service_container.sh | 25 +++++++++++++++++++++++++
 tasks/20_setup_signing.yml         |  5 +++++
 tasks/30_hub.yml                   |  2 +-
 templates/hub_install.j2           | 17 ++++++++++++++++-
 5 files changed, 48 insertions(+), 2 deletions(-)
 create mode 100644 files/signing_service_container.sh

diff --git a/defaults/main.yml b/defaults/main.yml
index 2da911c..5c276fe 100644
--- a/defaults/main.yml
+++ b/defaults/main.yml
@@ -6,3 +6,4 @@ teardown: false
 enable_signing: false
 gpg_key_user_name: "Joe Tester"
 gpg_key_user_email: "joe@foo.bar"
+seed_validated_content: false
diff --git a/files/signing_service_container.sh b/files/signing_service_container.sh
new file mode 100644
index 0000000..4ac2392
--- /dev/null
+++ b/files/signing_service_container.sh
@@ -0,0 +1,25 @@
+#!/usr/bin/env bash
+
+set -u
+# This GPG_TTY variable might be needed on a container image that is not running as root.
+#export GPG_TTY=$(tty)
+# Create a file with passphrase only if the key is password protected.
+# echo "Galaxy2022" > /tmp/key_password.txt
+# pulp_container SigningService will pass the next 3 variables to the script.
+MANIFEST_PATH=$1
+IMAGE_REFERENCE="$REFERENCE"
+SIGNATURE_PATH="$SIG_PATH"
+# Create container signature using skopeo
+# Include --passphrase-file option if the key is password protected.
+skopeo standalone-sign \
+  $MANIFEST_PATH \
+  $IMAGE_REFERENCE \
+  $PULP_SIGNING_KEY_FINGERPRINT \
+  --output $SIGNATURE_PATH
+# Check the exit status
+STATUS=$?
+if [ $STATUS -eq 0 ]; then
+  echo {\"signature_path\": \"$SIGNATURE_PATH\"}
+else
+  exit $STATUS
+fi
diff --git a/tasks/20_setup_signing.yml b/tasks/20_setup_signing.yml
index ee4815d..524d93d 100644
--- a/tasks/20_setup_signing.yml
+++ b/tasks/20_setup_signing.yml
@@ -4,6 +4,11 @@
     src: "signing_service.sh"
     dest: "{{ aap_dir }}"
 
+- name: Copy container signing script to the PAH server
+  copy:
+    src: "signing_service_container.sh"
+    dest: "{{ aap_dir }}"
+
 - name: Create a gpg key description from template
   template:
     src: "gpg.txt.j2"
diff --git a/tasks/30_hub.yml b/tasks/30_hub.yml
index a23879b..7d4b528 100644
--- a/tasks/30_hub.yml
+++ b/tasks/30_hub.yml
@@ -13,5 +13,5 @@
   shell: "./setup.sh -e gpgcheck=0"
   args:
     chdir: "{{ aap_dir }}"
-  async: 2000
+  async: 3000
   poll: 15
diff --git a/templates/hub_install.j2 b/templates/hub_install.j2
index d00f7ca..a46f6a3 100644
--- a/templates/hub_install.j2
+++ b/templates/hub_install.j2
@@ -4,7 +4,7 @@
 {% if workshop_type is defined %}
 {{ ansible_host }} ansible_connection=local
 {% else %}
-automationhub ansible_connection=local
+{{ ansible_default_ipv4.address }} ansible_connection=local
 {% endif %}
 
 [database]
@@ -39,3 +39,18 @@ automationhub_pg_sslmode='prefer'
 
 gpgcheck='{{ gpgcheck | default(1)}}'
 ignore_preflight_errors = True
+
+{% if enable_signing == true %}
+automationhub_create_default_container_signing_service = True
+automationhub_create_default_collection_signing_service = True
+automationhub_auto_sign_collections = True
+automationhub_require_content_approval = True
+automationhub_collection_signing_service_key = {{ aap_dir }}/galaxy_signing_service.gpg
+automationhub_collection_signing_service_script = {{ aap_dir }}/signing_service.sh  
+automationhub_container_signing_service_key = {{ aap_dir }}/galaxy_signing_service.gpg
+automationhub_container_signing_service_script = {{ aap_dir }}/signing_service_container.sh
+{% endif %}
+
+{% if seed_validated_content == true %}
+automationhub_seed_collections=True
+{% endif %}
-- 
2.37.0 (Apple Git-136)

